{"version":3,"sources":["webpack://workadventure-map-starter-kit/./src/index.ts"],"names":["currentPopup","console","log","WA","onEnterZone","openPopup","label","className","callback","popup","close","onLeaveZone"],"mappings":"mBAKA,IAAIA,EAFJC,QAAQC,IAAI,+BAgCZC,GAAGC,YAAY,cAAc,KACzBJ,EAAeG,GAAGE,UAAU,aA9BT,0VA8BuC,CACtD,CACAC,MAAO,QACPC,UAAW,UACXC,SAAWC,IAEPA,EAAMC,eAOlBP,GAAGQ,YAAY,cAAc,KACzBX,EAAaU,WAGjBP,GAAGC,YAAY,gBAAgB,KAC3BJ,EAAeG,GAAGE,UAAU,eA/CP,0KA+CyC,CAC1D,CACAC,MAAO,QACPC,UAAW,UACXC,SAAWC,IAEPA,EAAMC,eAOlBP,GAAGQ,YAAY,gBAAgB,KAC3BX,EAAaU,WAGjBP,GAAGC,YAAY,gBAAgB,KAC3BJ,EAAeG,GAAGE,UAAU,eAhEP,2GAgEyC,CAC1D,CACAC,MAAO,QACPC,UAAW,UACXC,SAAWC,IAEPA,EAAMC,eAOlBP,GAAGQ,YAAY,gBAAgB,KAC3BX,EAAaU,Y","file":"script.js","sourcesContent":["/// <reference path=\"../node_modules/@workadventure/iframe-api-typings/iframe_api.d.ts\" />\n\n\nconsole.log('Script started successfully');\n// WA.openCoWebSite('https://workadventu.re');\nlet currentPopup: any = undefined\nconst circlPopupText = 'The Computer Incident Response Center Luxembourg (CIRCL) is a government-driven initiative designed to gather, review, report and respond to computer security threats and incidents. CIRCL is operated by SMILE - “security made in Lëtzebuerg” GIE, which is also the host organization for CASES and the Cyber Competence Center (C3) of Luxembourg.'\nconst hitachiPopupText = 'Hitachi proceeds with the development of new technologies and products that respond to the increasing demand for safety and security in the Social Innovation Business.'\nconst openSysPopupText = 'Open Systems is a groundbreaking cybersecurity company delivering an experience way beyond expectations.'\n\nlet helloWorldPopup: any;\n\n// const existingPopups = ['popup', 'testpopup']\n// const existingPopups = [{\n//     name: 'popup',\n//     body: 'Hello World',\n//     options: {lable: 'Close', className: 'primary', callback: (popup: any) =>{popup.close()}}\n// }, {\n//     name: 'popup_test',\n//     body: 'Hello World NUMERO 2',\n//     options: {}\n// }]\n\n// existingPopups.forEach((popup: any) => {\n//     WA.onEnterZone(popup.name, () => {\n//         currentPopup = WA.openPopup(popup.name, popup.body, [\n//         popup.options\n//     ]);\n//     });\n//     WA.onLeaveZone(popup.name, () => {\n//         currentPopup.close();\n//     });\n// })\n\n// Open the popup when we enter a given zone\nWA.onEnterZone('circlPopup', () => {\n    currentPopup = WA.openPopup(\"circlPopup\", circlPopupText, [\n        {\n        label: \"Close\",\n        className: \"primary\",\n        callback: (popup) => {\n            // Close the popup when the \"Close\" button is pressed.\n            popup.close();\n        }\n    }\n]);\n});\n\n// Close the popup when we leave the zone.\nWA.onLeaveZone('circlPopup', () => {\n    currentPopup.close();\n});\n\nWA.onEnterZone('hitachiPopup', () => {\n    currentPopup = WA.openPopup(\"hitachiPopup\", hitachiPopupText, [\n        {\n        label: \"Close\",\n        className: \"primary\",\n        callback: (popup) => {\n            // Close the popup when the \"Close\" button is pressed.\n            popup.close();\n        }\n    }\n]);\n});\n\n// Close the popup when we leave the zone.\nWA.onLeaveZone('hitachiPopup', () => {\n    currentPopup.close();\n});\n\nWA.onEnterZone('openSysPopup', () => {\n    currentPopup = WA.openPopup(\"openSysPopup\", openSysPopupText, [\n        {\n        label: \"Close\",\n        className: \"primary\",\n        callback: (popup) => {\n            // Close the popup when the \"Close\" button is pressed.\n            popup.close();\n        }\n    }\n]);\n});\n\n// Close the popup when we leave the zone.\nWA.onLeaveZone('openSysPopup', () => {\n    currentPopup.close();\n});\n\nfunction closePopUp(){\n    if (currentPopup !== undefined) {\n        currentPopup.close();\n        currentPopup = undefined;\n    }\n}\n"],"sourceRoot":""}